(function() {var implementors = {
"eclair":[["impl&lt;T, const BITS:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"eclair/num/struct.UnsignedInteger.html\" title=\"struct eclair::num::UnsignedInteger\">UnsignedInteger</a>&lt;T, BITS&gt;"]],
"openzl_crypto":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openzl_crypto/merkle_tree/node/struct.Node.html\" title=\"struct openzl_crypto::merkle_tree::node::Node\">Node</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"openzl_crypto/merkle_tree/node/struct.NodeParents.html\" title=\"struct openzl_crypto::merkle_tree::node::NodeParents\">NodeParents</a>"],["impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"openzl_crypto/merkle_tree/tree/struct.MerkleTree.html\" title=\"struct openzl_crypto::merkle_tree::tree::MerkleTree\">MerkleTree</a>&lt;C, T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/tree/trait.Configuration.html\" title=\"trait openzl_crypto::merkle_tree::tree::Configuration\">Configuration</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/tree/trait.Tree.html\" title=\"trait openzl_crypto::merkle_tree::tree::Tree\">Tree</a>&lt;C&gt;,</span>"],["impl&lt;C, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;F&gt; for <a class=\"struct\" href=\"openzl_crypto/merkle_tree/forest/struct.MerkleForest.html\" title=\"struct openzl_crypto::merkle_tree::forest::MerkleForest\">MerkleForest</a>&lt;C, F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/forest/trait.Configuration.html\" title=\"trait openzl_crypto::merkle_tree::forest::Configuration\">Configuration</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/forest/trait.Forest.html\" title=\"trait openzl_crypto::merkle_tree::forest::Forest\">Forest</a>&lt;C&gt;,</span>"],["impl&lt;C, T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"openzl_crypto/merkle_tree/forest/struct.TreeArray.html\" title=\"struct openzl_crypto::merkle_tree::forest::TreeArray\">TreeArray</a>&lt;C, T, N&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/forest/trait.Configuration.html\" title=\"trait openzl_crypto::merkle_tree::forest::Configuration\">Configuration</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"associatedtype\" href=\"openzl_crypto/merkle_tree/forest/trait.Configuration.html#associatedtype.Index\" title=\"type openzl_crypto::merkle_tree::forest::Configuration::Index\">Index</a>: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/forest/trait.FixedIndex.html\" title=\"trait openzl_crypto::merkle_tree::forest::FixedIndex\">FixedIndex</a>&lt;N&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/tree/trait.Tree.html\" title=\"trait openzl_crypto::merkle_tree::tree::Tree\">Tree</a>&lt;C&gt;,</span>"],["impl&lt;C, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"openzl_crypto/merkle_tree/fork/struct.Trunk.html\" title=\"struct openzl_crypto::merkle_tree::fork::Trunk\">Trunk</a>&lt;C, T, P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/tree/trait.Configuration.html\" title=\"trait openzl_crypto::merkle_tree::tree::Configuration\">Configuration</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/tree/trait.Tree.html\" title=\"trait openzl_crypto::merkle_tree::tree::Tree\">Tree</a>&lt;C&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"openzl_util/pointer/trait.PointerFamily.html\" title=\"trait openzl_util::pointer::PointerFamily\">PointerFamily</a>&lt;T&gt;,</span>"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"openzl_crypto/poseidon/matrix/struct.Matrix.html\" title=\"struct openzl_crypto::poseidon::matrix::Matrix\">Matrix</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"openzl_crypto/poseidon/matrix/struct.SquareMatrix.html\" title=\"struct openzl_crypto::poseidon::matrix::SquareMatrix\">SquareMatrix</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"openzl_crypto/poseidon/trait.NativeField.html\" title=\"trait openzl_crypto::poseidon::NativeField\">NativeField</a>,</span>"]],
"openzl_util":[["impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"openzl_util/array/struct.Array.html\" title=\"struct openzl_util::array::Array\">Array</a>&lt;T, N&gt;"],["impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"openzl_util/array/struct.Array.html\" title=\"struct openzl_util::array::Array\">Array</a>&lt;T, N&gt;"],["impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"openzl_util/array/struct.BoxArray.html\" title=\"struct openzl_util::array::BoxArray\">BoxArray</a>&lt;T, N&gt;"],["impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"openzl_util/array/struct.BoxArray.html\" title=\"struct openzl_util::array::BoxArray\">BoxArray</a>&lt;T, N&gt;"],["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"openzl_util/time/lock/struct.Timed.html\" title=\"struct openzl_util::time::lock::Timed\">Timed</a>&lt;T&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()