(function() {var implementors = {
"eclair":[],
"openzl_crypto":[["impl&lt;S, G, GEN, M, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/algebra/diffie_hellman/struct.DiffieHellman.html\" title=\"struct openzl_crypto::algebra::diffie_hellman::DiffieHellman\">DiffieHellman</a>&lt;S, G, GEN, M&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;GEN: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,</span>"],["impl&lt;E, C, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/encryption/convert/header/struct.Converter.html\" title=\"struct openzl_crypto::encryption::convert::header::Converter\">Converter</a>&lt;E, C&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,</span>"],["impl&lt;E, C, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/encryption/convert/key/struct.Converter.html\" title=\"struct openzl_crypto::encryption::convert::key::Converter\">Converter</a>&lt;E, C&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,</span>"],["impl&lt;E, C, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/encryption/convert/plaintext/struct.Converter.html\" title=\"struct openzl_crypto::encryption::convert::plaintext::Converter\">Converter</a>&lt;E, C&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,</span>"],["impl&lt;K, E, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/encryption/hybrid/struct.Hybrid.html\" title=\"struct openzl_crypto::encryption::hybrid::Hybrid\">Hybrid</a>&lt;K, E&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,</span>"],["impl&lt;COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/encryption/struct.EmptyHeader.html\" title=\"struct openzl_crypto::encryption::EmptyHeader\">EmptyHeader</a>&lt;COM&gt;"],["impl&lt;T, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/encryption/struct.UnsafeOutput.html\" title=\"struct openzl_crypto::encryption::UnsafeOutput\">UnsafeOutput</a>&lt;T, COM&gt;"],["impl&lt;E, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/encryption/struct.UnsafeNoEncrypt.html\" title=\"struct openzl_crypto::encryption::UnsafeNoEncrypt\">UnsafeNoEncrypt</a>&lt;E, COM&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,</span>"],["impl&lt;P, C, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/permutation/duplex/struct.Duplexer.html\" title=\"struct openzl_crypto::permutation::duplex::Duplexer\">Duplexer</a>&lt;P, C, COM&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: <a class=\"trait\" href=\"openzl_crypto/permutation/trait.PseudorandomPermutation.html\" title=\"trait openzl_crypto::permutation::PseudorandomPermutation\">PseudorandomPermutation</a>&lt;COM&gt; + <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"openzl_crypto/permutation/duplex/trait.Types.html\" title=\"trait openzl_crypto::permutation::duplex::Types\">Types</a>&lt;P, COM&gt; + <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;P::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>: <a class=\"trait\" href=\"openzl_crypto/permutation/trait.PseudorandomPermutation.html\" title=\"trait openzl_crypto::permutation::PseudorandomPermutation\">PseudorandomPermutation</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>: <a class=\"trait\" href=\"openzl_crypto/permutation/duplex/trait.Types.html\" title=\"trait openzl_crypto::permutation::duplex::Types\">Types</a>&lt;P::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>&gt;,</span>"],["impl&lt;S, C, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/signature/convert/struct.Converter.html\" title=\"struct openzl_crypto::signature::convert::Converter\">Converter</a>&lt;S, C&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,</span>"],["impl&lt;H, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/signature/schnorr/struct.Schnorr.html\" title=\"struct openzl_crypto::signature::schnorr::Schnorr\">Schnorr</a>&lt;H, COM&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; + <a class=\"trait\" href=\"openzl_crypto/signature/schnorr/trait.HashFunction.html\" title=\"trait openzl_crypto::signature::schnorr::HashFunction\">HashFunction</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;H::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>: <a class=\"trait\" href=\"openzl_crypto/signature/schnorr/trait.HashFunction.html\" title=\"trait openzl_crypto::signature::schnorr::HashFunction\">HashFunction</a>&lt;Group = <a class=\"type\" href=\"eclair/alloc/type.Const.html\" title=\"type eclair::alloc::Const\">Const</a>&lt;H::<a class=\"associatedtype\" href=\"openzl_crypto/signature/schnorr/trait.HashFunction.html#associatedtype.Group\" title=\"type openzl_crypto::signature::schnorr::HashFunction::Group\">Group</a>, COM&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;H::<a class=\"associatedtype\" href=\"openzl_crypto/signature/schnorr/trait.HashFunction.html#associatedtype.Group\" title=\"type openzl_crypto::signature::schnorr::HashFunction::Group\">Group</a>: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"eclair/alloc/type.Const.html\" title=\"type eclair::alloc::Const\">Const</a>&lt;H::<a class=\"associatedtype\" href=\"openzl_crypto/signature/schnorr/trait.HashFunction.html#associatedtype.Group\" title=\"type openzl_crypto::signature::schnorr::HashFunction::Group\">Group</a>, COM&gt;: <a class=\"trait\" href=\"openzl_crypto/algebra/trait.ScalarMulGroup.html\" title=\"trait openzl_crypto::algebra::ScalarMulGroup\">ScalarMulGroup</a>&lt;H::<a class=\"associatedtype\" href=\"openzl_crypto/signature/schnorr/trait.HashFunction.html#associatedtype.Scalar\" title=\"type openzl_crypto::signature::schnorr::HashFunction::Scalar\">Scalar</a>&gt; + <a class=\"trait\" href=\"openzl_crypto/algebra/security/trait.DiscreteLogarithmHardness.html\" title=\"trait openzl_crypto::algebra::security::DiscreteLogarithmHardness\">DiscreteLogarithmHardness</a>,</span>"],["impl&lt;C, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/merkle_tree/tree/struct.Parameters.html\" title=\"struct openzl_crypto::merkle_tree::tree::Parameters\">Parameters</a>&lt;C, COM&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/tree/trait.HashConfiguration.html\" title=\"trait openzl_crypto::merkle_tree::tree::HashConfiguration\">HashConfiguration</a>&lt;COM&gt; + <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;C::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>: <a class=\"trait\" href=\"openzl_crypto/merkle_tree/tree/trait.HashConfiguration.html\" title=\"trait openzl_crypto::merkle_tree::tree::HashConfiguration\">HashConfiguration</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"openzl_crypto/merkle_tree/tree/type.LeafHashParameters.html\" title=\"type openzl_crypto::merkle_tree::tree::LeafHashParameters\">LeafHashParameters</a>&lt;C, COM&gt;: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM, Type = <a class=\"type\" href=\"openzl_crypto/merkle_tree/tree/type.LeafHashParameters.html\" title=\"type openzl_crypto::merkle_tree::tree::LeafHashParameters\">LeafHashParameters</a>&lt;C::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"openzl_crypto/merkle_tree/tree/type.InnerHashParameters.html\" title=\"type openzl_crypto::merkle_tree::tree::InnerHashParameters\">InnerHashParameters</a>&lt;C, COM&gt;: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM, Type = <a class=\"type\" href=\"openzl_crypto/merkle_tree/tree/type.InnerHashParameters.html\" title=\"type openzl_crypto::merkle_tree::tree::InnerHashParameters\">InnerHashParameters</a>&lt;C::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>&gt;&gt;,</span>"],["impl&lt;const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, S, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/poseidon/encryption/struct.FixedEncryption.html\" title=\"struct openzl_crypto::poseidon::encryption::FixedEncryption\">FixedEncryption</a>&lt;N, S, COM&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"openzl_crypto/poseidon/trait.Specification.html\" title=\"trait openzl_crypto::poseidon::Specification\">Specification</a>&lt;COM&gt; + <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>: <a class=\"trait\" href=\"openzl_crypto/poseidon/trait.Specification.html\" title=\"trait openzl_crypto::poseidon::Specification\">Specification</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"openzl_crypto/poseidon/struct.State.html\" title=\"struct openzl_crypto::poseidon::State\">State</a>&lt;S, COM&gt;: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM, Type = <a class=\"struct\" href=\"openzl_crypto/poseidon/struct.State.html\" title=\"struct openzl_crypto::poseidon::State\">State</a>&lt;S::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>&gt;&gt;,</span>"],["impl&lt;S, T, const ARITY:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/poseidon/hash/struct.Hasher.html\" title=\"struct openzl_crypto::poseidon::hash::Hasher\">Hasher</a>&lt;S, T, ARITY, COM&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"openzl_crypto/poseidon/trait.Specification.html\" title=\"trait openzl_crypto::poseidon::Specification\">Specification</a>&lt;COM&gt; + <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>: <a class=\"trait\" href=\"openzl_crypto/poseidon/trait.Specification.html\" title=\"trait openzl_crypto::poseidon::Specification\">Specification</a>&lt;ParameterField = <a class=\"type\" href=\"eclair/alloc/type.Const.html\" title=\"type eclair::alloc::Const\">Const</a>&lt;S::<a class=\"associatedtype\" href=\"openzl_crypto/poseidon/trait.ParameterFieldType.html#associatedtype.ParameterField\" title=\"type openzl_crypto::poseidon::ParameterFieldType::ParameterField\">ParameterField</a>, COM&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"openzl_crypto/poseidon/trait.ParameterFieldType.html#associatedtype.ParameterField\" title=\"type openzl_crypto::poseidon::ParameterFieldType::ParameterField\">ParameterField</a>: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"openzl_crypto/poseidon/hash/trait.DomainTag.html\" title=\"trait openzl_crypto::poseidon::hash::DomainTag\">DomainTag</a>&lt;S&gt; + <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>: <a class=\"trait\" href=\"openzl_crypto/poseidon/hash/trait.DomainTag.html\" title=\"trait openzl_crypto::poseidon::hash::DomainTag\">DomainTag</a>&lt;S::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>&gt;,</span>"],["impl&lt;S, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/poseidon/struct.State.html\" title=\"struct openzl_crypto::poseidon::State\">State</a>&lt;S, COM&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"openzl_crypto/poseidon/trait.Specification.html\" title=\"trait openzl_crypto::poseidon::Specification\">Specification</a>&lt;COM&gt; + <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"openzl_crypto/poseidon/trait.Field.html#associatedtype.Field\" title=\"type openzl_crypto::poseidon::Field::Field\">Field</a>: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>: <a class=\"trait\" href=\"openzl_crypto/poseidon/trait.Specification.html\" title=\"trait openzl_crypto::poseidon::Specification\">Specification</a>&lt;Field = <a class=\"type\" href=\"eclair/alloc/type.Const.html\" title=\"type eclair::alloc::Const\">Const</a>&lt;S::<a class=\"associatedtype\" href=\"openzl_crypto/poseidon/trait.Field.html#associatedtype.Field\" title=\"type openzl_crypto::poseidon::Field::Field\">Field</a>, COM&gt;&gt;,</span>"],["impl&lt;S, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_crypto/poseidon/struct.Permutation.html\" title=\"struct openzl_crypto::poseidon::Permutation\">Permutation</a>&lt;S, COM&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"openzl_crypto/poseidon/trait.Specification.html\" title=\"trait openzl_crypto::poseidon::Specification\">Specification</a>&lt;COM&gt; + <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"eclair/alloc/trait.Constant.html#associatedtype.Type\" title=\"type eclair::alloc::Constant::Type\">Type</a>: <a class=\"trait\" href=\"openzl_crypto/poseidon/trait.Specification.html\" title=\"trait openzl_crypto::poseidon::Specification\">Specification</a>&lt;ParameterField = <a class=\"type\" href=\"eclair/alloc/type.Const.html\" title=\"type eclair::alloc::Const\">Const</a>&lt;S::<a class=\"associatedtype\" href=\"openzl_crypto/poseidon/trait.ParameterFieldType.html#associatedtype.ParameterField\" title=\"type openzl_crypto::poseidon::ParameterFieldType::ParameterField\">ParameterField</a>, COM&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"openzl_crypto/poseidon/trait.ParameterFieldType.html#associatedtype.ParameterField\" title=\"type openzl_crypto::poseidon::ParameterFieldType::ParameterField\">ParameterField</a>: <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt;,</span>"]],
"openzl_plugin_arkworks":[["impl&lt;F&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;<a class=\"struct\" href=\"openzl_plugin_arkworks/constraint/struct.R1CS.html\" title=\"struct openzl_plugin_arkworks::constraint::R1CS\">R1CS</a>&lt;F&gt;&gt; for <a class=\"enum\" href=\"openzl_plugin_arkworks/constraint/enum.Boolean.html\" title=\"enum openzl_plugin_arkworks::constraint::Boolean\">Boolean</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"openzl_plugin_arkworks/ff/trait.PrimeField.html\" title=\"trait openzl_plugin_arkworks::ff::PrimeField\">PrimeField</a>,</span>"],["impl&lt;F&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;<a class=\"struct\" href=\"openzl_plugin_arkworks/constraint/struct.R1CS.html\" title=\"struct openzl_plugin_arkworks::constraint::R1CS\">R1CS</a>&lt;F&gt;&gt; for <a class=\"enum\" href=\"openzl_plugin_arkworks/constraint/enum.FpVar.html\" title=\"enum openzl_plugin_arkworks::constraint::FpVar\">FpVar</a>&lt;F&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"openzl_plugin_arkworks/ff/trait.PrimeField.html\" title=\"trait openzl_plugin_arkworks::ff::PrimeField\">PrimeField</a>,</span>"],["impl&lt;COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_plugin_arkworks/poseidon/struct.TwoPowerMinusOneDomainTag.html\" title=\"struct openzl_plugin_arkworks::poseidon::TwoPowerMinusOneDomainTag\">TwoPowerMinusOneDomainTag</a>"],["impl&lt;F, const ARITY:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, COM&gt; <a class=\"trait\" href=\"eclair/alloc/trait.Constant.html\" title=\"trait eclair::alloc::Constant\">Constant</a>&lt;COM&gt; for <a class=\"struct\" href=\"openzl_plugin_arkworks/poseidon/struct.Spec.html\" title=\"struct openzl_plugin_arkworks::poseidon::Spec\">Spec</a>&lt;F, ARITY&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"openzl_plugin_arkworks/ff/trait.PrimeField.html\" title=\"trait openzl_plugin_arkworks::ff::PrimeField\">PrimeField</a>,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()