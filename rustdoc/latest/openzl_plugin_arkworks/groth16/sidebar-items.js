window.SIDEBAR_ITEMS = {"fn":[["create_proof","Create a Groth16 proof using randomness `r` and `s`."],["create_proof_no_zk","Create a Groth16 proof that is not zero-knowledge."],["create_random_proof","Create a Groth16 proof that is zero-knowledge. This method samples randomness for zero knowledges via `rng`."],["generate_parameters","Create parameters for a circuit, given some toxic waste and group generators"],["generate_random_parameters","Generates a random common reference string for a circuit."],["prepare_inputs","Prepare proof inputs for use with [`verify_proof_with_prepared_inputs`], wrt the prepared verification key `pvk` and instance public inputs."],["prepare_verifying_key","Prepare the verifying key `vk` for use in proof verification."],["proof_as_bytes","Converts `proof` into its canonical byte-representation."],["rerandomize_proof","Given a Groth16 proof, returns a fresh proof of the same statement. For a proof π of a statement S, the output of the non-deterministic procedure `rerandomize_proof(π)` is statistically indistinguishable from a fresh honest proof of S. For more info, see theorem 3 of [BKSV20]"],["serialize_proof","Uses `serializer` to serialize `proof`."],["verify_proof","Verify a Groth16 proof `proof` against the prepared verification key `pvk`, with respect to the instance `public_inputs`."],["verify_proof_with_prepared_inputs","Verify a Groth16 proof `proof` against the prepared verification key `pvk` and prepared public inputs. This should be preferred over [`verify_proof`] if the instance’s public inputs are known in advance."]],"macro":[["public_input_impl","Implements [`Input`] over [`Groth16`] for `$type` that can convert to a field element."]],"mod":[["data_structures","Data structures used by the prover, verifier, and generator."],["generator","Generate public parameters for the Groth16 zkSNARK construction."],["prover","Create proofs for the Groth16 zkSNARK construction."],["verifier","Verify proofs for the Groth16 zkSNARK construction."]],"struct":[["Error","Proof System Error"],["Groth16","Arkworks Groth16 Proof System"],["PreparedVerifyingKey","Preprocessed verification key parameters that enable faster verification at the expense of larger size in memory."],["Proof","Groth16 Proof"],["ProvingContext","Proving Context"],["ProvingKey","The prover key for for the Groth16 zkSNARK."],["VerifyingContext","Verifying Context"],["VerifyingKey","A verification key in the Groth16 SNARK."]]};