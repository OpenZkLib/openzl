[package]
name = "openzl-util"
version = "0.0.0"
edition = "2021"
readme = "README.md"
license = "MIT OR Apache-2.0"
repository = "https://github.com/openzklib/openzl"
homepage = "https://openzl.org"
documentation = "https://docs.rs/openzl"
categories = [""]
keywords = [""]
description = "OpenZL Utilities"

[package.metadata.docs.rs]
# To build locally:
# RUSTDOCFLAGS="--cfg doc_cfg" cargo +nightly doc --all-features --open
all-features = true
rustdoc-args = ["--cfg", "doc_cfg"]

[badges]
is-it-maintained-issue-resolution = { repository = "openzklib/openzl" }
is-it-maintained-open-issues = { repository = "openzklib/openzl" }
maintenance = { status = "actively-developed" }

[features]
# Allocation
alloc = ["serde?/alloc"]

# Enable `getrandom` Entropy Source
getrandom = ["rand_core/getrandom"]

# Serialization
serde = ["dep:serde", "rand_chacha?/serde1"]

# Standard Library
std = ["alloc", "crossbeam-channel?/std", "rand_chacha?/std", "serde?/std"]

[dependencies]
crossbeam-channel = { version = "0.5.6", optional = true, default-features = false }
derivative = { version = "2.2.0", default-features = false, features = ["use_core"] }
rand = { version = "0.8.4", optional = true, default-features = false, features = ["alloc"] }
rand_chacha = { version = "0.3.1", optional = true, default-features = false }
rand_core = { version = "0.6.3", default-features = false }
rayon = { version = "1.5.3", optional = true, default-features = false }
reqwest = { version = "0.11.12", optional = true, default-features = false, features = ["default-tls", "json"] }
serde = { version = "1.0.144", optional = true, default-features = false, features = ["derive"] }
serde_with = { version = "2.0.1", optional = true, default-features = false, features = ["macros"] }
tide = { version = "0.16.0", optional = true, default-features = false, features = ["h1-server"] }

